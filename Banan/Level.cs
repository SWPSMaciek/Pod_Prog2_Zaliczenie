class Level
{
    static List<string[]> allLevelVisuals = new List<string[]>
    {
        new string[]
        {
            "##################################",
            "#12345678901234567890123456789012#",
            "#2...............................#",
            "#3...............................#",
            "#4...............................#",
            "#5...............................#",
            "#6...............................#",
            "#7...............................#",
            "#8...............................#",
            "#9...............................#",
            "#10.Left=A.......................#",
            "#11.Right=D......................#",
            "#12.Shoot=SpaceBar...............#",
            "#13..............................#",
            "#14..............................#",
            "#15..............................#",
            "#16.............................X#",
            "##################################",
        },
        new string[]
        {
            "##################################",
            "###LEVEL1......................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "###............................###",
            "##################################",
        },
        new string[]
        {
            "##################################",
            "#####LEVEL2..................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "#####........................#####",
            "##################################",
        },
        // Add more levels here as new string[]
        new string[]
        {
            "##################################",
            "#######LEVEL3..............#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "#######....................#######",
            "##################################",
        },
        new string[]
        {
            "##################################",
            "###########LEVEL4......###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "###########............###########",
            "##################################",
        },
        new string[]
        {
            ".__....__....................__......__.....................",
            @"/\.\../\.\................../\.\..__/\.\....................",
            @"\.`\`\\/'/.___...__..__.....\.\.\/\.\.\.\....___.....___....",
            @".`\.`\./'./.__`\/\.\/\.\.....\.\.\.\.\.\.\../.__`\./'._.`\..",
            @"...`\.\.\/\.\L\.\.\.\_\.\.....\.\.\_/.\_\.\/\.\L\.\/\.\/\.\.",
            @".....\.\_\.\____/\.\____/......\.`\___x___/\.\____/\.\_\.\_\\",
            @"......\/_/\/___/..\/___/........'\/__//__/..\/___/..\/_/\/_/ ",
            @"............................................................",
            @"............................................................",
            @".____.......................................................",
            @"/\.._`\.....................................................",
            @"\.\,\L\_\.._____......__......___.....__....................",
            @".\/_\__.\./\.'__`\../'__`\.../'___\./'__`\..................",
            @".../\.\L\.\.\.\L\.\/\.\L\.\_/\.\__//\..__/..................",
            @"...\.`\____\.\.,__/\.\__/.\_\.\____\.\____\.................",
            @"....\/_____/\.\.\/..\/__/\/_/\/____/\/____/.................",
            @".............\.\_\..........................................",
            @"..............\/_/..........................................",
            @".____.........................____..........................",
            @"/\.._`\....................../\.._`\........................",
            @"\.\.\/\_\....___...__..__..__\.\.\L\.\....___...__..__......",
            @".\.\.\/_/_../.__`\/\.\/\.\/\.\\.\.._.<'../.__`\/\.\/\.\.....",
            @"..\.\.\L\.\/\.\L\.\.\.\_/.\_/.\\.\.\L\.\/\.\L\.\.\.\_\.\....",
            @"...\.\____/\.\____/\.\___x___/'.\.\____/\.\____/\/`____.\...",
            @"....\/___/..\/___/..\/__//__/....\/___/..\/___/..`/___/>.\..",
            @"..................................................../\___/..",
            @"....................................................\/__/...",
        }
    };

    string[] levelVisuals;
    List<List<Cell>> levelData;


    public Level(int levelIndex = 0)
    {
        if (levelIndex < 0 || levelIndex >= allLevelVisuals.Count)
            throw new ArgumentOutOfRangeException("levelIndex", "Invalid level index.");
        levelVisuals = allLevelVisuals[levelIndex];
        levelData = new List<List<Cell>>();

        for (int y = 0; y < levelVisuals.Length; y++)
        {
            List<Cell> row = new List<Cell>();
            for (int x = 0; x < levelVisuals[y].Length; x++)
            {
                char cellVisuals = levelVisuals[y][x];
                Cell cell = new Cell(cellVisuals);
                row.Add(cell);
            }
            levelData.Add(row);
        }
    }


    public void Display()
    {
        foreach (List<Cell> row in levelData)
        {
            foreach (Cell cell in row)
            {
                cell.Display();
            }
            Console.WriteLine();
        }
    }

    public char GetCellVisuals(int x, int y)
    {
        return levelVisuals[y][x];
    }

    public int GetHeight()
    {
        return levelVisuals.Length;
    }

    public int GetRowWidth(int rowNumber)
    {
        return levelVisuals[rowNumber].Length;
    }

    public void RedrawCell(Point position)
    {
        Console.SetCursorPosition(position.x, position.y);
        char cellValue = GetCellVisuals(position.x, position.y);
        Console.Write(cellValue);
    }
}